// <auto-generated />
using System;
using DotNetCore.SharpStreamer.RabbitMq.Npgsql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DotNetCore.SharpStreamer.RabbitMq.Npgsql.Migrations
{
    [DbContext(typeof(RabbitNpgDbContext))]
    partial class RabbitNpgDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DotNetCore.SharpStreamer.Entities.PublishedEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("EventKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("RetryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset>("SentAt")
                        .HasColumnType("timestamptz");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("None = 0,InProgress = 1,Succeeded = 2,Failed = 3");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_PublishedEvents_Timestamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Timestamp"), "BRIN");

                    b.HasIndex("Status", "SentAt")
                        .HasDatabaseName("IX_Events_For_Publishing");

                    b.ToTable("published_events", "sharp_streamer");
                });

            modelBuilder.Entity("DotNetCore.SharpStreamer.Entities.ReceivedEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("EventKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Partition")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("RetryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset>("SentAt")
                        .HasColumnType("timestamptz");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("None = 0,InProgress = 1,Succeeded = 2,Failed = 3");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset?>("UpdateTimestamp")
                        .HasColumnType("timestamptz");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_ReceivedEvents_Timestamp");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Timestamp"), "BRIN");

                    b.HasIndex("EventKey", "Status", "Timestamp")
                        .HasDatabaseName("IX_EventKey_Status")
                        .HasFilter("\"Status\" = 0 or \"Status\" = 3 or \"Status\" = 1");

                    b.HasIndex("Status", "UpdateTimestamp", "RetryCount")
                        .HasDatabaseName("IX_Events_For_Processing");

                    b.ToTable("received_events", "sharp_streamer");
                });
#pragma warning restore 612, 618
        }
    }
}
